<!--
    When enabled, Uniform purges Akamai Cache for the site after it was successfully deployed.
    
    NOTE "<!>" token is used to force Sitecore YSOD to make sure that the developer won't forget to configure it
    NOTE remove "<!>" token when filling in this config
-->

<configuration xmlns:set="http://www.sitecore.net/xmlconfig/set/">
  <sitecore>

    <!-- UNIFORM -->
    <uniform>

      <siteConfigurations>
        <siteConfiguration name="uniform-jss-kit">

          <!-- the original uniform-jss-kit site uses database="master
            however Uniform Deploy (is in charge of clearing akamai cache)
            requires that <site>'s database attribute value matches the target database
            where the authors publish content to ("web") otherwise it will idle.
          -->
          <site set:inherits="uniform-jss-kit" set:database="web" />

          <deployment>

            <!-- for Akamai we need a deployment service that will clear cache as the last stage
              there are three deployment services available OOB: 
              * hostedDeploymentService (full JAMStack approach, connects with self-hosted resource)
              * netlifyDeploymentService (full JAMStack approach, connects with Netlify SaaS)
              * nopDeploymentService (skips JAMStack phase, only facilitates Akamai cache clearing and .timestamp.txt file generation in the wwwroot dir for optional incremental cache clearing feature)
              so we use choose nopDeploymentService to only clear akamai cache -->
            <deploymentService ref="uniform/services/nopDeploymentService" />

          </deployment>

          <purge>

            <purgeService set:ref="uniform/services/akamaiPurgeService">
              <!-- invalidate method will ensure that immediatelly after the deployment customers won't notice any delays caused by pulling new content from the origin -->
              <method>invalidate</method>

              <!-- delete method will ensure that the stale content is never served (for advanced use cases) -->
              <!-- <method>delete</method>-->

              <clientToken><!> AKAMAI CLIENT TOKEN <!></clientToken>
              <accessToken><!> AKAMAI ACCESS TOKEN <!></accessToken>
              <secret><!> AKAMAI SECRET <!></secret>
              <apiUrl><!> AKAMAI API URL <!></apiUrl>
              <network>production</network>
              <hostNames hint="list:AddHostName">
                <hostName0><!> PUBLIC URL OF THE SITE THAT IS SERVED BY AKAMAI <!></hostName0>
                <!-- additional hosts can be added as <hostName1> etc. -->
              </hostNames>

              <!-- cpCodes are only used when [ Purge site ] button is pressed -->
              <cpCodes hint="list:AddCpCode">
                <cpCode0><!> CP CODE OF THE SITE THAT IS SERVED BY AKAMAI <!></cpCode0>
                <!-- additional CP CODEs can be added as <cpCode1> etc. -->
              </cpCodes>
            </purgeService>

          </purge>

        </siteConfiguration>
      </siteConfigurations>

    </uniform>

  </sitecore>
</configuration>
